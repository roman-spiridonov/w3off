[project]
name = "w3off"
version = "0.1.5"
description = "Collection of CLI utilities for secure offline blockchain transaction creation and signing"
requires-python = ">=3.12"
license = { file = "LICENSE" }
readme = { file = "README.md", content-type = "text/markdown" }
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.12",
]
keywords = ["web3", "offline-wallet", "ethereum", "evm", "crypto", "blockchain", "smart-contracts"]
dependencies = [
  "web3",
  "eth_tester",
  "py-evm",
  "pyyaml",
]

# [project.optional-dependencies]
# dev = [
#   "black",
#   "ruff",
#   "bandit"
# ]

[project.urls]
Homepage = "https://github.com/roman-spiridonov/w3off"
Repository = "https://github.com/roman-spiridonov/w3off"
Issues = "https://github.com/roman-spiridonov/w3off/issues"

[project.scripts]
w3off = "w3off.__main__:main"
w3observer = "w3off.observer.__main__:main"
w3signer = "w3off.signer.__main__:main"
w3sender = "w3off.sender.__main__:main"

# [project.entry-points."w3off"]
# w3off = "w3off.__main__:main"

# [tool.setuptools]
# # packages = ["w3off"]
# include-package-data = true

# [tool.setuptools.packages.find]
# where = ["."]
# include = ["w3off*"]  # package names should match these glob patterns (["*"] by default)
# exclude = ["observer", "sender", "signer", "docs*", "*.egg-info"]
# namespaces = false  # to disable scanning PEP 420 namespaces (true by default)
# # exclude = ["test* "]  # exclude packages matching these glob patterns (empty by default)

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.setuptools.package-data]
test = ["../chains.yaml", "*.*", "data/*.*"]

# [tool.ruff]
# extend-exclude = [
#     "__pycache__",
#     "build",
#     "dist",
# ]
# src = ["cli", "config", "helpers", "observer", "provider", "sender", "signer", "test", "w3off"]
# line-length = 128
# target-version = "py312"

# [tool.ruff.lint]
# extend-select = [
#     "C4",
#     "SIM",
#     "D200",
#     "D201",
#     "D204",
#     "D205",
#     "D206",
#     "D210",
#     "D211",
#     "D213",
#     "D300",
#     "D400",
#     "D402",
#     "D403",
#     "D404",
#     "D419",
#     "E",
#     "F",
#     "G010",
#     "I",
#     "INP001",
#     "N805",
#     "PERF101",
#     "PERF102",
#     "PERF401",
#     "PERF402",
#     "PGH004",
#     "PGH005",
#     "PIE794",
#     "PIE796",
#     "PIE807",
#     "PIE810",
#     "RET502",
#     "RET503",
#     "RET504",
#     "RET505",
#     "RUF015",
#     "RUF100",
#     "S101",
#     "T20",
#     "UP",
#     "W",
# ]

# extend-ignore = [
#     "E501",
#     "S101",
#     "T201",
#     "F541",
#     "E722", # empty exception
#     #### modules
#     "ANN", # flake8-annotations
#     "COM", # flake8-commas
#     "C90", # mccabe complexity
#     "DJ",  # django
#     "EXE", # flake8-executable
#     "T10", # debugger
#     "TID", # flake8-tidy-imports

#     #### specific rules
#     "D100",   # ignore missing docs
#     "D101",
#     "D102",
#     "D103",
#     "D104",
#     "D105",
#     "D106",
#     "D107",
#     "D200",
#     "D205",
#     "D212",
#     "D400",
#     "D401",
#     "D415",
#     "E402",   # false positives for local imports
#     "E501",   # line too long
#     "TRY003", # external messages in exceptions are too verbose
#     "TD002",
#     "TD003",
#     "FIX002", # too verbose descriptions of todos
# ]

# [tool.ruff.lint.mccabe]
# # Unlike Flake8, default to a complexity level of 10.
# max-complexity = 10

# [tool.mypy]
# files = ["cli", "config", "helpers", "observer", "provider", "sender", "signer", "test", "w3off"]
# strict = true